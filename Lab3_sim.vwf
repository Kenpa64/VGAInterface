/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 500000.0;
	SIMULATION_TIME = 500000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("blue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("blue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "blue";
}

SIGNAL("blue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "blue";
}

SIGNAL("blue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "blue";
}

SIGNAL("blue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "blue";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("green")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("green[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "green";
}

SIGNAL("green[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "green";
}

SIGNAL("green[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "green";
}

SIGNAL("green[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "green";
}

SIGNAL("hsync")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("mode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("red")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("red[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "red";
}

SIGNAL("red[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "red";
}

SIGNAL("red[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "red";
}

SIGNAL("red[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "red";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("vsync")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counterh")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counterh[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterh[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterh";
}

SIGNAL("counterv")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counterv[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("counterv[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counterv";
}

SIGNAL("hfin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("vfin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("blue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16980.785;
		LEVEL 1 FOR 483019.215;
	}
}

TRANSITION_LIST("blue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16980.849;
		LEVEL 1 FOR 483019.151;
	}
}

TRANSITION_LIST("blue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16981.771;
		LEVEL 1 FOR 483018.229;
	}
}

TRANSITION_LIST("blue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16981.246;
		LEVEL 1 FOR 483018.754;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("green[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("green[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("green[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("green[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("hsync")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 101.365;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 15770.0;
			LEVEL 0 FOR 1110.0;
		}
		LEVEL 1 FOR 10378.635;
	}
}

TRANSITION_LIST("mode")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 500000.0;
	}
}

TRANSITION_LIST("red[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("red[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("red[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("red[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 499920.0;
	}
}

TRANSITION_LIST("vsync")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 101.309;
		LEVEL 1 FOR 499898.691;
	}
}

TRANSITION_LIST("counterh[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10320.629;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 6640.0;
			LEVEL 0 FOR 10240.0;
		}
		LEVEL 1 FOR 159.371;
	}
}

TRANSITION_LIST("counterh[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5200.719;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 1520.0;
			LEVEL 0 FOR 5120.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 159.281;
	}
}

TRANSITION_LIST("counterh[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2641.344;
		NODE
		{
			REPEAT = 28;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 2560.0;
				LEVEL 0 FOR 2560.0;
			}
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 4080.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 2560.0;
		}
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 4080.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 158.656;
	}
}

TRANSITION_LIST("counterh[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1360.405;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 240.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 1280.0;
				LEVEL 1 FOR 1280.0;
			}
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 159.595;
	}
}

TRANSITION_LIST("counterh[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 721.859;
		NODE
		{
			REPEAT = 28;
			NODE
			{
				REPEAT = 12;
				LEVEL 1 FOR 640.0;
				LEVEL 0 FOR 640.0;
			}
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 880.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 880.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 158.141;
	}
}

TRANSITION_LIST("counterh[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.383;
		NODE
		{
			REPEAT = 28;
			NODE
			{
				REPEAT = 25;
				LEVEL 1 FOR 320.0;
				LEVEL 0 FOR 320.0;
			}
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 560.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 560.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 159.617;
	}
}

TRANSITION_LIST("counterh[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.636;
		NODE
		{
			REPEAT = 52;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 80.0;
			NODE
			{
				REPEAT = 52;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 160.0;
			}
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 32;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 159.364;
	}
}

TRANSITION_LIST("counterh[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.631;
		NODE
		{
			REPEAT = 28;
			NODE
			{
				REPEAT = 104;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 160.0;
		}
		NODE
		{
			REPEAT = 104;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 64;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 79.369;
	}
}

TRANSITION_LIST("counterh[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.651;
		NODE
		{
			REPEAT = 6248;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 39.349;
	}
}

TRANSITION_LIST("counterh[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.444;
		NODE
		{
			REPEAT = 12497;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 19.556;
	}
}

TRANSITION_LIST("counterh[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.385;
		NODE
		{
			REPEAT = 24995;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 9.615;
	}
}

TRANSITION_LIST("counterv[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("counterv[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("counterv[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("counterv[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("counterv[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("counterv[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("counterv[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 270160.664;
		LEVEL 1 FOR 229839.336;
	}
}

TRANSITION_LIST("counterv[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 135121.61;
		LEVEL 1 FOR 135040.0;
		LEVEL 0 FOR 135040.0;
		LEVEL 1 FOR 94798.39;
	}
}

TRANSITION_LIST("counterv[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67600.675;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 67520.0;
			LEVEL 0 FOR 67520.0;
		}
		LEVEL 1 FOR 27279.325;
	}
}

TRANSITION_LIST("counterv[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 33840.661;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 33760.0;
			LEVEL 0 FOR 33760.0;
		}
		LEVEL 1 FOR 33760.0;
		LEVEL 0 FOR 27279.339;
	}
}

TRANSITION_LIST("counterv[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16960.603;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 16880.0;
			LEVEL 0 FOR 16880.0;
		}
		LEVEL 1 FOR 10399.397;
	}
}

TRANSITION_LIST("hfin")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16951.14;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 9.907;
			LEVEL 0 FOR 16870.093;
		}
		LEVEL 1 FOR 9.907;
		LEVEL 0 FOR 10398.953;
	}
}

TRANSITION_LIST("vfin")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "mode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "blue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "blue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "blue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "blue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "blue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "green";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "green[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "green[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "green[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "green[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "red";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "red[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "red[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "red[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "red[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "hsync";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "vsync";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "counterh";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterh[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "counterv";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
	CHILDREN = 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "counterv[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "hfin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "vfin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 25000;
	MASTER = TRUE;
}
;
